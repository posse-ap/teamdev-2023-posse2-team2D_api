openapi: 3.0.0
info:
  title: The_13th_priority_api
  version: '1.0'
  description: 'API for The_13th_priority'
paths:
  /users:
    get:
      tags:
        - Users
      description: 全ユーザー情報取得
      operationId: GetUsers
      responses:
        '200':
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Users
      description: ユーザー情報登録
      operationId: CreateUser
      requestBody:
        $ref: '#/components/requestBodies/CreateUserBody'
      responses:
        '201':
          description: ユーザー情報登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /users/{id}:
    put:
      tags:
        - Users
      description: ユーザー情報1件更新
      operationId: UpdateUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateUserBody'
      responses:
        '200':
          description: ユーザー情報更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized Error
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /userinfo:
    get:
      tags:
        - UserInfo
      description: 自分のユーザー情報取得
      operationId: GetLoginUser
      responses:
        '200':
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userinfo'
        '500':
          description: Internal Server Error
  /items:
    get:
      tags:
        - Item
      description: 商品の情報を全て取得する
      operationId: GetItems
      responses:
        '200':
          description: 提出した作品とその成績の情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
        '500':
          description: Internal Server Error
  /item/{id}:
    get:
      tags:
        - Item
      description: 一件の知識の情報を取得する
      operationId: GetKnowledge
      responses:
        '200':
          description: 一件の知識の情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /Knowledges:
    get:
      tags:
        - Knowledge
      description: 商品の情報を全て取得する
      operationId: GetKnowledges
      responses:
        '200':
          description: 提出した作品とその成績の情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Knowledges'
        '500':
          description: Internal Server Error
  /knowledge/{id}:
    get:
      tags:
        - Knowledge
      description: 一件の商品の情報を取得する
      operationId: GetItem
      responses:
        '200':
          description: 提出した作品とその成績の情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Knowledge'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /borrowingItems:
    get:
      tags:
        - Trading
      description: 商品借用情報取得
      operationId: GetborrowingItems
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: 商品借用情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/borrowingItems'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /rentingItems:
    get:
      tags:
        - Trading
      description: 商品貸出情報取得
      operationId: GetrentingItems
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: 商品貸出情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rentingItems'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /borrowingKnowledges:
    get:
      tags:
        - Trading
      description: ナレッジ借用情報取得
      operationId: GetborrowingKnowledges
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: ナレッジ借用情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/borrowingKnowledges'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /rentingKnowledges:
    get:
      tags:
        - Trading
      description: ナレッジ貸出情報取得
      operationId: GetrentingKnowledges
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: ナレッジ貸出情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rentingKnowledges'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /requests:
    get:
      tags:
        - Request
      description: リクエスト情報取得
      operationId: Getrequests
      responses:
        '200':
          description: リクエスト情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/requests'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Request
      description: リクエスト情報登録
      operationId: CreateRequest
      requestBody:
        $ref: '#/components/requestBodies/CreateRequestBody'
      responses:
        '201':
          description: リクエスト情報登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requests'
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /request/{id}:
    get:
      tags:
        - Request
      description: リクエスト詳細情報取得
      operationId: Getrequest
      responses:
        '200':
          description: リクエスト詳細情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/request'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Request
      description: リクエスト情報1件更新
      operationId: Updaterequest
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateRequestBody'
      responses:
        '200':
          description: リクエスト情報更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/request'
        '401':
          description: Unauthorized Error
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Request
      description: リクエスト削除
      operationId: DeleteRequest
      parameters:
        - $ref: '#/components/parameters/RequestId'
      responses:
        '204':
          description: 手本削除成功
        '401':
          description: Unauthorized Error
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /itemsManagement:
    get:
      tags:
        - Admin
      description: 商品の情報を全て取得する
      operationId: GetallItems
      responses:
        '200':
          description: 商品の情報全て取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemsManagement'
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
  parameters:
    UserId:
      name: id
      in: path
      description: ユーザーを識別するID
      required: true
      schema:
        type: number
    RequiredQueryUserId:
      name: user_id
      in: query
      description: ユーザーを識別するID, クエリパラメータで使用
      required: true
      schema:
        type: string
    RequestId:
      name: id
      in: path
      description: リクエストを識別するID
      required: true
      schema:
        type: integer
        example: 1
  requestBodies:
    UpdateUserBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUser'
    CreateUserBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUser'
    UpdateRequestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Updaterequest'
    CreateRequestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Createrequest'
  schemas:
    UserId:
      description: ユーザーのID
      properties:
        id:
          type: string
          example: 'fd7e7dd8-8ea6-4af9-8d56-11b8ef4486c9'
    CompletedSignUp:
      description: ユーザーが本登録済みかどうか
      properties:
        completed_sign_up:
          type: boolean
    User:
      description: レスポンスで返すユーザー情報
      type: object
      allOf:
        - $ref: '#/components/schemas/UserBase'
        - $ref: '#/components/schemas/UserId'
      required:
        - id
    Userinfo:
      description: ログインユーザーの情報
      allOf:
        - $ref: '#/components/schemas/UserBase'
        - $ref: '#/components/schemas/UserId'
        - $ref: '#/components/schemas/CompletedSignUp'
      required:
        - id
        - completed_sign_up
    CreateUser:
      description: 登録する際にリクエストに含めるユーザー情報
      allOf:
        - $ref: '#/components/schemas/UserBase'
        - $ref: '#/components/schemas/CompletedSignUp'
    UpdateUser:
      description: 更新する際にリクエストに含めるユーザー情報
      allOf:
        - $ref: '#/components/schemas/UserBase'
        - $ref: '#/components/schemas/CompletedSignUp'
    UserBase:
      description: ユーザー関連スキーマの共通部分
      type: object
      required:
        - slack_id
        - full_name
        - nickname
        - email
        - is_admin
      properties:
        slack_id:
          type: string
          example: 'fffdsftdffsd'
        full_name:
          type: string
          example: '2.0期生 山田太郎'
        nickname:
          type: string
          example: '山風'
        email:
          type: string
          example: 'saikan1@email.com'
        hobby:
          type: string
          example: 'スニーカー'
        introduction:
          type: string
          example: 'スニーカーが大好きです。'
        is_admin:
          type: boolean
          example: true
    Items:
      description: 全ての商品情報
      type: array
      items:
        type: object
        properties:
          id:
            type: number
            example: 1
          price:
            type: number
            example: 1000
          img:
            type: string
            example: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e'
          title:
            type: string
            example: 'MacbookPro 2018 core i7 2.6GHz 16GB 512GB'
          owner:
            type: string
            example: '@bkristastucchio'
          is_bookmark:
            type: boolean
            example: false
          state: 
            type: number
            example: 1
    Item:
      description: 一つの商品情報
      type: object
      properties: 
        id:
          type: number
          example: 1
        price: 
          type: number
          example: 1000
        title: 
          type: string
          example: 'MacbookPro 2018 core i7 2.6GHz 16GB 512GB'
        state: 
          type: number
          example: 1
        is_bookmark:
          type: boolean
          example: false
        ownerInfo:
          type: object
          properties:
            id:
              type: number
              example: 1
            name:
              type: string
              example: 'かしけん'
            img:
              type: string
              example: 'logo'
        img:
          type: array
          items: 
            type: string
            example: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e'
        comments:
          type: array
          items:
            type: object
            properties:
              user_id: 
                type: number
                example: 1
              user_name:
                type: string
                example: 'tarp'
              img:
                type: string
                example: 'logo'
              content:
                type: string
                example: 'これってスペックいいほうなんですかね？'
        transactions:
          type: array
          items:
            type: object
            properties:
              id: 
                type: number
                example: 1
              start_date:
                type: number
                example: '2022/02/11'
              points:
                type: number
                example: 1000
              borrower:
                type: string
                example: 'kashiken'
              return_date:
                type: string
                example: '2022/4/14'
    Knowledges:
      description: 全ての知識情報
      type: array
      items:
        type: object
        required:
          - id
          - title
          - owner
        properties:
          id:
            type: number
            example: 1
          img:
            type: string
            example: 'https://images.unsplash.com/photo-1522770179533-24471fcdba45'
          title:
            type: string
            example: 'Breakfast'
          owner:
            type: string
            example: '@bkristastucchio'
          participants:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  example: 'tarp'
                img:
                  type: string
                  example: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e'
          is_bookmark:
            type: boolean
            example: false
    Knowledge:
      description: 一つの知識情報
      type: object
      properties:
        id:
          type: number
          example: 1
        price:
          type: number
          example: 1000
        img:
          type: array
          items: 
            type: string
            example: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e'
        title:
          type: string
          example: 'MacbookPro 2018 core i7 2.6GHz 16GB 512GB'
        is_bookmark:
          type: boolean
          example: false
        ownerInfo:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 1
              name: 
                type: string
                example: 'かしけん'
              img:
                type: string
                example: 'logo'
        comments:
          type: array
          items:
            type: object
            properties:
              user_id: 
                type: number
                example: 1
              user_name:
                type: string
                example: 'tarp'
              img:
                type: string
                example: 'logo'
              content:
                type: string
                example: 'これってスペックいいほうなんですかね？'
        appreciation:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: number
                example: 1
              user_name:
                type: string
                example: 'tarp'
              img:
                type: string
                example: 'logo'
              content:
                type: string
                example: 'これってスペックいいほうなんですかね？'
        transactions:
          type: array
          items:
            type: object
            properties:
              id: 
                type: number
                example: 1
              book_date:
                type: string
                example: '2022/02/11'
              points:
                type: number
                example: 1000
              booker:
                type: string
                example: 'kashiken'
              hold_status:
                type: string
                example: '開催済み'
    borrowingItems:
      type: array
      items:
        type: object
        properties:
          id: 
            type: number
            example: 1
          name:
            type: string
            example: 'Breakfast'
          borrow_status:
            description: 1=借用中,2=返却済み
            type: number
            example: 1
          points:
            type: number
            example: 1000
          owner:
            type: string
            example: 'kashiken'
          img:
            type: string
            example: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e'
          is_display:
            type: boolean
            example: false
          created_at:
            type: string
            example: '2022/02/11'
    rentingItems:
      type: array
      items:
        type: object
        properties:
          id: 
            type: number
            example: 1
          name:
            type: string
            example: 'Breakfast'
          rent_status:
            description: 1=貸出中,2=貸出申請中
            type: number
            example: 1
          points:
            type: number
            example: 1000
          borrower:
            type: string
            example: 'kashiken'
          img:
            type: string
            example: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e'
          is_display:
            type: boolean
            example: false
          created_at:
            type: string
            example: '2022/02/11'
    borrowingKnowledges:
      type: array
      items:
        type: object
        properties:
          id: 
            type: number
            example: 1
          name:
            type: string
            example: 'Breakfast'
          borrow_status:
            description: 1=借用中,2=返却済み
            type: number
            example: 1
          points:
            type: number
            example: 1000
          booker:
            type: string
            example: 'kashiken'
          img:
            type: string
            example: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e'
          is_display:
            type: boolean
            example: false
          created_at:
            type: string
            example: '2022/02/11'
    rentingKnowledges:
      type: array
      items:
        type: object
        properties:
          id: 
            type: number
            example: 1
          name:
            type: string
            example: 'Breakfast'
          rent_status:
            description: 1=貸出中,2=貸出申請中
            type: number
            example: 1
          points:
            type: number
            example: 1000
          participant:
            type: string
            example: 'kashiken'
          img:
            type: string
            example: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e'
          is_display:
            type: boolean
            example: false
          created_at:
            type: string
            example: '2022/02/11'
    requests:
      type: array
      items:
        type: object
        properties:
          request_id: 
            type: number
            example: 1
          name:
            type: string
            example: 'Breakfast'
          detail:
            type: string
            example: チーム開発のために二ヶ月ほどお借りしたいなと思っています！
          is_mine:
            type: boolean
            example: false
    Createrequest:
      description: 登録する際にリクエストに含めるユーザー情報
      allOf:
        - $ref: '#/components/schemas/CompletedSignUp'
    request:
      type: object
      properties:
        request_id: 
          type: number
          example: 1
        name:
          type: string
          example: 'Breakfast'
        detail:
          type: string
          example: チーム開発のために二ヶ月ほどお借りしたいなと思っています！
        is_mine:
          type: boolean
          example: false
    Updaterequest:
      description: 登録する際にリクエストに含める情報
      allOf:
        - $ref: '#/components/schemas/CompletedSignUp'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    itemsManagement:
      type: array
      items:
        description: 全ての商品情報
        type: object
        properties: 
          id:
            type: number
            example: 1
          title: 
            type: string
            example: 'MacbookPro 2018 core i7 2.6GHz 16GB 512GB'
          price: 
            type: number
            example: 1000
          status:
            description: 1,貸出中,2,出品中,3,公開停止中
            type: number
            example: 1
          ownerInfo:
            type: object
            properties:
              id:
                type: number
                example: 1
              name:
                type: string
                example: 'かしけん'
              img:
                type: string
                example: 'logo'
          kind:
            description: 1=商品,2=ナレッジ
            type: number
            example: 1
          img:
            type: array
            items: 
              type: string
              example: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e'
          transactions:
            type: array
            items:
              type: object
              properties:
                id: 
                  type: number
                  example: 1
                start_date:
                  type: number
                  example: '2022/02/11'
                points:
                  type: number
                  example: 1000
                borrower:
                  type: string
                  example: 'kashiken'
                return_date:
                  type: string
                  example: '2022/4/14'
tags:  
  - name: Users
    description: ユーザーに関するAPI
  - name: UserInfo
    description: ログイン済みのユーザーに関するAPI
  - name: Item
    description: 商品に関するAPI
  - name: Knowledge
    description: ナレッジに関するAPI
  - name: Trading
    description: 取引に関するAPI